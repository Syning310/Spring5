<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
                            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    
    
    <!--    基于xml文件    -->

    <context:component-scan base-package="transaction,test"></context:component-scan>
    
    <!--    引入外部属性问及那    -->
    <context:property-placeholder location="classpath:druid.properties" />

    <!--    数据库连接池    -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${prop.driverClassName}"></property>
        <property name="url" value="${prop.url}"></property>
        <property name="username" value="${prop.username}"></property>
        <property name="password" value="${prop.password}"></property>
        <property name="initialSize" value="${prop.initialSize}"></property>
        <property name="minIdle" value="${prop.minIdle}"></property>
        <property name="maxActive" value="${prop.maxActive}"></property>
    </bean>

    <!--    JdbcTemplate 对象    -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <!--        注入dataSource 对象， 利用的是set方法，而不是有参构造        -->
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    

    <!--    1、创建事务管理器的实现类    -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--        注入数据源        -->
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    
<!--    2、配置通知    -->
    <tx:advice id="txadvice">
<!--    配置事务参数   事务的底层本就是利用aop实现的       -->
        <tx:attributes>
<!--        指定哪种规则的方法上面添加事务，填入方法名 add* 表示所有 add 开头的方法           -->
            <tx:method name="z*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>
    
<!--    3、配置切入点和切面    -->
    <aop:config>
<!--        配置切入点  表达式中填的是 类路径.方法(..)        -->
        <aop:pointcut id="pt" expression="execution(* test.TestTansaction.z(..))"/>
<!--        配置切面  advice是上面配置的通知，pointcut-ref 引用的是上面配置的切入点    -->
        <aop:advisor advice-ref="txadvice" pointcut-ref="pt"/>
    </aop:config>
    

</beans>